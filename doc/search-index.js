var searchIndex = JSON.parse('{\
"lib":{"doc":"","t":[0,0,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,13,13,4,13,4,13,13,13,13,4,13,13,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,2,2,3,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["markup","style","Lexer","Parser","Tokens","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","convert","feed","from","from","from","from","from","from","into","into","into","new","parse","tokens","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","types","Background","Bold","Color","Color","Command","Commands","Default","Escaped","Foreground","FormatState","Off","On","Reset","Text","Types","Underline","Url","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","COLOR","Color","Style","add","ansi","background","bg","bold","borrow","borrow_mut","color","eq","fg","fmt","fmt","foreground","format","from","into","is_bold","is_underline","link","new","to_string","try_from","try_into","type_id","underline","url","Background","COLOR","Color","Foreground","ansi","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","code","eq","fmt","fmt","from","from","hex","into","into","new","rgb","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["lib","","lib::markup","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lib::markup::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lib::markup::types::Color","","lib::markup::types::Command","","lib::markup::types::Types","","","","lib::style","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lib::style::color","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","Convert a markup string into an AST","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Stores a style/format to apply to text.","","Build the ansi code that is placed before the text along …","Change the background color to <code>fg</code>","Background color. Either Some(Color) or None","Change the bold state of the style","","","","","Foreground color. Either Some(Color) or None","","","Change the foreground color to <code>fg</code>","Formats text with ansi codes for terminal output","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Bold state of the style","Underline state of the style","Url/hyperlink of the style. Either Some(String) or None","","","","","","Change the underline state of the style","Set the text to be a hyperlink along with what the link is …","(40) Background Color","Defines a foreground or background color.","Color structure. Represents red, green, and blue color …","(30) Foreground Color","Get the colors full ansi code including the escape …","","","","","","","Get the colors ansi code without the escape sequence.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new rgb color from a hex code","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new rgb color","Get the rgb values as a tuple","","","","","","","",""],"i":[0,0,0,0,0,18,19,1,18,19,1,18,1,18,18,19,19,1,1,18,19,1,1,19,1,18,19,1,18,19,1,18,19,1,0,8,2,0,9,0,2,10,9,8,0,10,10,8,2,0,2,9,8,9,10,2,8,9,10,2,8,9,10,2,8,9,10,2,8,9,10,2,8,9,10,2,8,9,10,2,8,9,10,2,8,9,10,2,8,9,10,2,8,9,10,2,20,21,22,23,24,25,26,27,0,0,0,13,13,13,13,13,13,13,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16,0,0,16,14,16,14,16,14,14,14,14,14,14,14,16,14,14,16,14,14,14,14,14,16,14,16,14,16,14],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,[[3,[2]]]],[[1,4]],[4,[[3,[2]]]],[[]],[[]],[4,5],[[]],[4,1],[[]],[[]],[[]],[[],1],[[[3,[2]]],5],[1,[[3,[5]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,8],[9,9],[10,10],[2,2],[[]],[[]],[[]],[[]],[[8,11],12],[[9,11],12],[[10,11],12],[[2,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],0,0,0,0,0,0,0,0,0,0,0,[[13,13]],[13],[[13,14],13],[13,14],[13,13],[[]],[[]],0,[[13,13],15],[13,14],[[13,11],12],[[13,11],12],[[13,14],13],[[13,4],5],[[]],[[]],[13,15],[13,15],[13,5],[[],13],[[],5],[[],6],[[],6],[[],7],[13,13],[[13,4],13],0,0,0,0,[[14,16],5],[[]],[[]],[[]],[[]],[14,14],[[]],[[14,16],5],[[14,14],15],[[14,11],12],[[14,11],12],[[]],[[]],[4,[[6,[14,4]]]],[[]],[[]],[[17,17,17],14],[14],[[]],[[],5],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7]],"p":[[3,"Tokens"],[4,"Types"],[3,"Vec"],[15,"str"],[3,"String"],[4,"Result"],[3,"TypeId"],[4,"Color"],[4,"Command"],[4,"FormatState"],[3,"Formatter"],[6,"Result"],[3,"Style"],[3,"Color"],[15,"bool"],[4,"COLOR"],[15,"u8"],[3,"Lexer"],[3,"Parser"],[13,"Foreground"],[13,"Background"],[13,"Url"],[13,"Color"],[13,"Text"],[13,"Bold"],[13,"Underline"],[13,"Commands"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
